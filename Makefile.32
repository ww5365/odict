###########################################################################
# Automatically generated by comake (1.0.1)  							  #
###########################################################################

#################设计系统参数#######################################
WORKROOT	?=	../../
IDLCC	:=	$(WORKROOT)/public/idlcompiler/output/bin/mcy
RPCCC :=  $(WORKROOT)/public/ubrpc/output/bin/ubrpcgen
CC	:=	gcc
CXX	:=	g++
LEX	:=	flex
YACC	:= yacc
CFLAGS	:=	-pipe -fsigned-char -Wall -W -g -fPIC
CXXFLAGS	:=	-pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
LEXFLAGS	:=	
YACCFLAGS	:=	
IDLFLAGS	:=  
LINKFLAGS	:=  -rdynamic -rdynamic
LINK	:=	g++
AR	:=	ar cqs
RANLIB	:=	
COMAKE	:=	comake

HARDWARE_PLATFORM := $(shell uname -m)
ifeq ($(HARDWARE_PLATFORM),x86_64)
	lib2=lib2-64
	third=third-64
else
	lib2=lib2
	third=third
endif

ifeq ($(MAC),ARM32)
    lib2=lib2-arm32
    third=third-arm32
endif
##########################################

# 编译参数
DEP_INCPATH =  -I$(WORKROOT)/$(lib2)/dict//include/ -I$(WORKROOT)/$(lib2)/ullib//include/
DEP_LDFLAGS =  -L$(WORKROOT)/$(lib2)/ullib//lib/ -L$(WORKROOT)/$(lib2)/dict//lib/
DEP_LDLIBS = -luldict -lullib
INCPATH =  -I. -I.
MAKDEP = Makefile.dep


#start target
first : all

############# 默认推到公式
.SUFFIXES: .c .cpp .cc .cxx .C .idl .des
.PRECIOUS: %.cpp

.cpp.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cc.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.cxx.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.C.o:
	$(CXX) -c -o $@ $<  $(CXXFLAGS) $(CPPFLAGS) $(INCPATH)

.c.o:
	$(CC) -c -o $@ $<  $(CFLAGS) $(CPPFLAGS) $(INCPATH)

.idl.cpp:
	$(IDLCC) --ns=$(*F) -o $* $< $(CPPFLAGS) $(INCPATH) $(IDLFLAGS)

#############
###cpp 支持
%info : %
	ccp $<
#############


#__$MAKEFILE_RULES$__



###############编译目标
all :  target output 
.PHONY : all clean test output comake src conf 

target : libodict.a 
#target : rpcidl libodict.a 
#target : 
#__$target_CMDLINE$__

rpcidl : 

clean_rpcidl : 


test : 	./test1		./test2		./test3		./test_odb_128		./test_odb_64		./mass_data_save_test	


comake :
	-make clean
	-comake 

#-include $(MAKDEP)
-include $(MAKDEP)

#----------------build target : libodict.a--------------------

libodict.a : CC := gcc
libodict.a : CXX := g++
libodict.a : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
libodict.a : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
libodict.a : IDLFLAGS := 
libodict.a : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
libodict.a : INCPATH :=  -I. -I. $(DEP_INCPATH)
libodict.a : LDLIBS := -lcrypto -lm -lpthread -lpthread $(DEP_LDLIBS)
libodict.a : LDFLAGS :=  $(DEP_LDFLAGS)
libodict.a : LINKFLAGS := -rdynamic -rdynamic

libodict_a_SOURCES := $(wildcard odict.cpp)
#libodict_a_HEADERS := $(wildcard *.h)
libodict_a_HEADERS := *.h
libodict_a_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
libodict_a_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(libodict_a_IDLSRC))
libodict_a_IDLSRCH := $(patsubst %.idl,%.h, $(libodict_a_IDLSRC))
libodict_a_CONFDES := $(wildcard __$CONFDES$_VALUE$__ libodict.a.des)
libodict_a_CONFRANGE := $(patsubst %.des,%.range, $(libodict_a_CONFDES))
libodict_a_OBJS := $(libodict_a_IDLSRC:.idl=.o)
libodict_a_OBJS += $(libodict_a_SOURCES:.c=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.cc=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.cpp=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.cxx=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.C=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.idl=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.yacc=.o)
libodict_a_OBJS := $(libodict_a_OBJS:.lex=.o)
libodict.a : $(libodict_a_OBJS) 
	rm -f $@ || echo 
	ar cr $@ $^


define libodict_a_output
	rm -rf output
	mkdir -p output/include
	mkdir -p output/demo
	cp libodict.a output
	cp odict.h output/include
	cp main*.cpp output/demo
	cp README output/
	cp ChangeLog output/
endef
	

define libodict_a_clean
	-rm -rf $(libodict_a_OBJS) $(libodict_a_IDLSRCCPP) $(libodict_a_IDLSRCH) libodict.a.range conf/libodict.a.range
	-rm -rf libodict.a
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define libodict_a_ccpc
	ccp $(libodict_a_SOURCES) --formatter vim
endef
	

define libodict_a_cov
	
endef
	



#---------------------end build target : libodict.a------------------

#----------------build target : test1--------------------

test1 : CC := gcc
test1 : CXX := g++
test1 : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
test1 : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
test1 : IDLFLAGS := 
test1 : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test1 : INCPATH :=  -I. -I. $(DEP_INCPATH)
test1 : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
test1 : LDFLAGS :=  $(DEP_LDFLAGS)
test1 : LINKFLAGS := -rdynamic -rdynamic

test1_SOURCES := $(wildcard main1.cpp)
#test1_HEADERS := $(wildcard *.h)
test1_HEADERS := *.h
test1_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test1_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test1_IDLSRC))
test1_IDLSRCH := $(patsubst %.idl,%.h, $(test1_IDLSRC))
test1_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test1.des)
test1_CONFRANGE := $(patsubst %.des,%.range, $(test1_CONFDES))
test1_OBJS := $(test1_IDLSRC:.idl=.o)
test1_OBJS += $(test1_SOURCES:.c=.o)
test1_OBJS := $(test1_OBJS:.cc=.o)
test1_OBJS := $(test1_OBJS:.cpp=.o)
test1_OBJS := $(test1_OBJS:.cxx=.o)
test1_OBJS := $(test1_OBJS:.C=.o)
test1_OBJS := $(test1_OBJS:.idl=.o)
test1_OBJS := $(test1_OBJS:.yacc=.o)
test1_OBJS := $(test1_OBJS:.lex=.o)
test1 : $(test1_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test1_CONFDES);do cpp -C -o test1.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test1.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test1_output
	
endef
	

define test1_clean
	-rm -rf $(test1_OBJS) $(test1_IDLSRCCPP) $(test1_IDLSRCH) test1.range conf/test1.range
	-rm -rf test1
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test1_ccpc
	ccp $(test1_SOURCES) --formatter vim
endef
	

define test1_cov
	
endef
	



#---------------------end build target : test1------------------

#----------------build target : test2--------------------

test2 : CC := gcc
test2 : CXX := g++
test2 : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
test2 : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
test2 : IDLFLAGS := 
test2 : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test2 : INCPATH :=  -I. -I. $(DEP_INCPATH)
test2 : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
test2 : LDFLAGS :=  $(DEP_LDFLAGS)
test2 : LINKFLAGS := -rdynamic -rdynamic

test2_SOURCES := $(wildcard main2.cpp)
#test2_HEADERS := $(wildcard *.h)
test2_HEADERS := *.h
test2_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test2_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test2_IDLSRC))
test2_IDLSRCH := $(patsubst %.idl,%.h, $(test2_IDLSRC))
test2_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test2.des)
test2_CONFRANGE := $(patsubst %.des,%.range, $(test2_CONFDES))
test2_OBJS := $(test2_IDLSRC:.idl=.o)
test2_OBJS += $(test2_SOURCES:.c=.o)
test2_OBJS := $(test2_OBJS:.cc=.o)
test2_OBJS := $(test2_OBJS:.cpp=.o)
test2_OBJS := $(test2_OBJS:.cxx=.o)
test2_OBJS := $(test2_OBJS:.C=.o)
test2_OBJS := $(test2_OBJS:.idl=.o)
test2_OBJS := $(test2_OBJS:.yacc=.o)
test2_OBJS := $(test2_OBJS:.lex=.o)
test2 : $(test2_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test2_CONFDES);do cpp -C -o test2.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test2.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test2_output
	
endef
	

define test2_clean
	-rm -rf $(test2_OBJS) $(test2_IDLSRCCPP) $(test2_IDLSRCH) test2.range conf/test2.range
	-rm -rf test2
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test2_ccpc
	ccp $(test2_SOURCES) --formatter vim
endef
	

define test2_cov
	
endef
	



#---------------------end build target : test2------------------

#----------------build target : test3--------------------

test3 : CC := gcc
test3 : CXX := g++
test3 : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
test3 : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
test3 : IDLFLAGS := 
test3 : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test3 : INCPATH :=  -I. -I. $(DEP_INCPATH)
test3 : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
test3 : LDFLAGS :=  $(DEP_LDFLAGS)
test3 : LINKFLAGS := -rdynamic -rdynamic

test3_SOURCES := $(wildcard main3.cpp)
#test3_HEADERS := $(wildcard *.h)
test3_HEADERS := *.h
test3_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test3_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test3_IDLSRC))
test3_IDLSRCH := $(patsubst %.idl,%.h, $(test3_IDLSRC))
test3_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test3.des)
test3_CONFRANGE := $(patsubst %.des,%.range, $(test3_CONFDES))
test3_OBJS := $(test3_IDLSRC:.idl=.o)
test3_OBJS += $(test3_SOURCES:.c=.o)
test3_OBJS := $(test3_OBJS:.cc=.o)
test3_OBJS := $(test3_OBJS:.cpp=.o)
test3_OBJS := $(test3_OBJS:.cxx=.o)
test3_OBJS := $(test3_OBJS:.C=.o)
test3_OBJS := $(test3_OBJS:.idl=.o)
test3_OBJS := $(test3_OBJS:.yacc=.o)
test3_OBJS := $(test3_OBJS:.lex=.o)
test3 : $(test3_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test3_CONFDES);do cpp -C -o test3.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test3.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test3_output
	
endef
	

define test3_clean
	-rm -rf $(test3_OBJS) $(test3_IDLSRCCPP) $(test3_IDLSRCH) test3.range conf/test3.range
	-rm -rf test3
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test3_ccpc
	ccp $(test3_SOURCES) --formatter vim
endef
	

define test3_cov
	
endef
	



#---------------------end build target : test3------------------

#----------------build target : test_odb_128--------------------

test_odb_128 : CC := gcc
test_odb_128 : CXX := g++
test_odb_128 : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
test_odb_128 : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
test_odb_128 : IDLFLAGS := 
test_odb_128 : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test_odb_128 : INCPATH :=  -I. -I. $(DEP_INCPATH)
test_odb_128 : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
test_odb_128 : LDFLAGS :=  $(DEP_LDFLAGS)
test_odb_128 : LINKFLAGS := -rdynamic -rdynamic

test_odb_128_SOURCES := $(wildcard test_odb_128.cpp)
#test_odb_128_HEADERS := $(wildcard *.h)
test_odb_128_HEADERS := *.h
test_odb_128_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test_odb_128_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test_odb_128_IDLSRC))
test_odb_128_IDLSRCH := $(patsubst %.idl,%.h, $(test_odb_128_IDLSRC))
test_odb_128_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test_odb_128.des)
test_odb_128_CONFRANGE := $(patsubst %.des,%.range, $(test_odb_128_CONFDES))
test_odb_128_OBJS := $(test_odb_128_IDLSRC:.idl=.o)
test_odb_128_OBJS += $(test_odb_128_SOURCES:.c=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.cc=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.cpp=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.cxx=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.C=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.idl=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.yacc=.o)
test_odb_128_OBJS := $(test_odb_128_OBJS:.lex=.o)
test_odb_128 : $(test_odb_128_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test_odb_128_CONFDES);do cpp -C -o test_odb_128.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test_odb_128.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test_odb_128_output
	
endef
	

define test_odb_128_clean
	-rm -rf $(test_odb_128_OBJS) $(test_odb_128_IDLSRCCPP) $(test_odb_128_IDLSRCH) test_odb_128.range conf/test_odb_128.range
	-rm -rf test_odb_128
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test_odb_128_ccpc
	ccp $(test_odb_128_SOURCES) --formatter vim
endef
	

define test_odb_128_cov
	
endef
	



#---------------------end build target : test_odb_128------------------

#----------------build target : test_odb_64--------------------

test_odb_64 : CC := gcc
test_odb_64 : CXX := g++
test_odb_64 : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
test_odb_64 : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
test_odb_64 : IDLFLAGS := 
test_odb_64 : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
test_odb_64 : INCPATH :=  -I. -I. $(DEP_INCPATH)
test_odb_64 : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
test_odb_64 : LDFLAGS :=  $(DEP_LDFLAGS)
test_odb_64 : LINKFLAGS := -rdynamic -rdynamic

test_odb_64_SOURCES := $(wildcard test_odb_64.cpp)
#test_odb_64_HEADERS := $(wildcard *.h)
test_odb_64_HEADERS := *.h
test_odb_64_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
test_odb_64_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(test_odb_64_IDLSRC))
test_odb_64_IDLSRCH := $(patsubst %.idl,%.h, $(test_odb_64_IDLSRC))
test_odb_64_CONFDES := $(wildcard __$CONFDES$_VALUE$__ test_odb_64.des)
test_odb_64_CONFRANGE := $(patsubst %.des,%.range, $(test_odb_64_CONFDES))
test_odb_64_OBJS := $(test_odb_64_IDLSRC:.idl=.o)
test_odb_64_OBJS += $(test_odb_64_SOURCES:.c=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.cc=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.cpp=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.cxx=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.C=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.idl=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.yacc=.o)
test_odb_64_OBJS := $(test_odb_64_OBJS:.lex=.o)
test_odb_64 : $(test_odb_64_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(test_odb_64_CONFDES);do cpp -C -o test_odb_64.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp test_odb_64.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define test_odb_64_output
	
endef
	

define test_odb_64_clean
	-rm -rf $(test_odb_64_OBJS) $(test_odb_64_IDLSRCCPP) $(test_odb_64_IDLSRCH) test_odb_64.range conf/test_odb_64.range
	-rm -rf test_odb_64
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define test_odb_64_ccpc
	ccp $(test_odb_64_SOURCES) --formatter vim
endef
	

define test_odb_64_cov
	
endef
	



#---------------------end build target : test_odb_64------------------

#----------------build target : mass_data_save_test--------------------

mass_data_save_test : CC := gcc
mass_data_save_test : CXX := g++
mass_data_save_test : CXXFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC -g -Winline -fsigned-char -Wall -pipe -fPIC -O2 -finline-functions
mass_data_save_test : CPPFLAGS := -DVERSION=\"1.1.4.2\" -DLINUX -D_REENTRANT
mass_data_save_test : IDLFLAGS := 
mass_data_save_test : CFLAGS := -pipe -fsigned-char -Wall -W -g -fPIC
mass_data_save_test : INCPATH :=  -I. -I. $(DEP_INCPATH)
mass_data_save_test : LDLIBS := -lcrypto -lm -lpthread -lpthread -lcrypto -L. -lodict $(DEP_LDLIBS)
mass_data_save_test : LDFLAGS :=  $(DEP_LDFLAGS)
mass_data_save_test : LINKFLAGS := -rdynamic -rdynamic

mass_data_save_test_SOURCES := $(wildcard mass_data_save_test.cpp)
#mass_data_save_test_HEADERS := $(wildcard *.h)
mass_data_save_test_HEADERS := *.h
mass_data_save_test_IDLSRC := $(wildcard __$IDLSRC_VALUE$__)
mass_data_save_test_IDLSRCCPP := $(patsubst %.idl,%.cpp, $(mass_data_save_test_IDLSRC))
mass_data_save_test_IDLSRCH := $(patsubst %.idl,%.h, $(mass_data_save_test_IDLSRC))
mass_data_save_test_CONFDES := $(wildcard __$CONFDES$_VALUE$__ mass_data_save_test.des)
mass_data_save_test_CONFRANGE := $(patsubst %.des,%.range, $(mass_data_save_test_CONFDES))
mass_data_save_test_OBJS := $(mass_data_save_test_IDLSRC:.idl=.o)
mass_data_save_test_OBJS += $(mass_data_save_test_SOURCES:.c=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.cc=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.cpp=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.cxx=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.C=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.idl=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.yacc=.o)
mass_data_save_test_OBJS := $(mass_data_save_test_OBJS:.lex=.o)
mass_data_save_test : $(mass_data_save_test_OBJS) 
	@echo "force_clean"
	$(foreach n, $(wildcard ), $(if ifeq($(suffix $(n)), .c), $(CC) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH);  , $(CXX) -c -o $(basename $(n)).o $(n) $(CXXFLAGS) $(CPPFLAGS) $(INCPATH); ))
	@`for x in $(mass_data_save_test_CONFDES);do cpp -C -o mass_data_save_test.range $$x $(CPPFLAGS) $(INCPATH);mkdir -p conf;cp mass_data_save_test.range conf/; done`
	$(LINK) $^ -o $@ -Xlinker "-(" $(LDFLAGS) $(LDLIBS) $(LINKFLAGS) -Xlinker "-)"


define mass_data_save_test_output
	
endef
	

define mass_data_save_test_clean
	-rm -rf $(mass_data_save_test_OBJS) $(mass_data_save_test_IDLSRCCPP) $(mass_data_save_test_IDLSRCH) mass_data_save_test.range conf/mass_data_save_test.range
	-rm -rf mass_data_save_test
	-rm -rf output
	-rm -rf ccp_output.error   ccp_output_scm.xml  ccp_output.xml ccp_output.pclint  ccp_output.txt
endef
	

define mass_data_save_test_ccpc
	ccp $(mass_data_save_test_SOURCES) --formatter vim
endef
	

define mass_data_save_test_cov
	
endef
	



#---------------------end build target : mass_data_save_test------------------

define _output
	$(libodict_a_output)
	$(test1_output)
	$(test2_output)
	$(test3_output)
	$(test_odb_128_output)
	$(test_odb_64_output)
	$(mass_data_save_test_output)
endef
	

define _clean
	$(libodict_a_clean)
	$(test1_clean)
	$(test2_clean)
	$(test3_clean)
	$(test_odb_128_clean)
	$(test_odb_64_clean)
	$(mass_data_save_test_clean)
endef
	

ccpc : 
	$(libodict_a_ccpc)
	$(test1_ccpc)
	$(test2_ccpc)
	$(test3_ccpc)
	$(test_odb_128_ccpc)
	$(test_odb_64_ccpc)
	$(mass_data_save_test_ccpc)

cov : 
	cov01 -1
	make clean
	make 
	cov01 -0



output : libodict.a 
	$(_output)
	rm -rf $(MAKDEP)

$(MAKDEP) : $(wildcard comake_autogen.cpp odict.cpp main1.cpp main2.cpp main3.cpp test_odb_128.cpp test_odb_64.cpp mass_data_save_test.cpp)
	-$(CC) -MG -MM $(CPPFLAGS) $(INCPATH) $(DEP_INCPATH) $^ > $@

clean:
	$(_clean)
	rm -rf $(MAKDEP)


